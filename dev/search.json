[{"path":"http://www.reconverse.org/trending/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Tim Taylor Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.reconverse.org/trending/dev/articles/Introduction.html","id":"main-features","dir":"Articles","previous_headings":"","what":"Main features","title":"Introduction","text":"Model specification: Interfaces common models intuitive functions; lm_model(), glm_model(), glm_nb_model brms_model*. Model fitting prediction: specified, models can fit data generate confidence prediction intervals future data using fit() predict(). Error warning catching: provided methods fit predict catch warnings errors, returning output captured values list. *   Requires brms","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/articles/Introduction.html","id":"setup","dir":"Articles","previous_headings":"Example usage","what":"Setup","title":"Introduction","text":"","code":"library(outbreaks)  # for data library(trending)   # for trend fitting library(dplyr)      # for data manipulation  # load data data(covid19_england_nhscalls_2020)  # select 6 weeks of data (from a period when the prevalence was decreasing) last_date <- as.Date(\"2020-05-28\") first_date <- last_date - 8*7 pathways_recent <-   covid19_england_nhscalls_2020 %>%   filter(date >= first_date, date <= last_date) %>%   group_by(date, day, weekday) %>%   summarise(count = sum(count), .groups = \"drop\")  # split data for fitting and prediction dat <-   pathways_recent %>%   group_by(date <= first_date + 6*7) %>%   group_split()  fitting_data <- dat[[2]] pred_data <- select(dat[[1]], date, day, weekday)"},{"path":"http://www.reconverse.org/trending/dev/articles/Introduction.html","id":"a-succesful-model-fit","dir":"Articles","previous_headings":"Example usage","what":"A succesful model fit","title":"Introduction","text":"","code":"(model  <- glm_nb_model(count ~ day + weekday)) #> Untrained trending model: #>     glm.nb(formula = count ~ day + weekday) (fitted_model <- fit(model, fitting_data)) #> <trending_fit_tbl> 1 x 3 #>   result   warnings errors #>   <list>   <list>   <list> #> 1 <negbin> <NULL>   <NULL> fitted_model %>% get_result() #> [[1]] #>  #> Call:  glm.nb(formula = count ~ day + weekday, data = fitting_data,  #>     init.theta = 39.34595795, link = log) #>  #> Coefficients: #>    (Intercept)             day   weekdaymonday  weekdayweekend   #>       11.46417        -0.03476         0.19162        -0.14224   #>  #> Degrees of Freedom: 42 Total (i.e. Null);  39 Residual #> Null Deviance:       395.9  #> Residual Deviance: 43.17     AIC: 850.6  # default fitted_model %>%    predict(pred_data) %>%   get_result() #> [[1]] #> <trending_prediction> 14 x 8 #>    date         day weekday      estimate lower_ci upper_ci lower_pi upper_pi #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week   12682.   11390.   14122.     8107    18870 #>  2 2020-05-16    59 weekend        10625.    9299.   12140.     6618    16223 #>  3 2020-05-17    60 weekend        10262.    8956.   11759.     6373    15714 #>  4 2020-05-18    61 monday         13840.   11749.   16303.     8363    21784 #>  5 2020-05-19    62 rest_of_week   11036.    9782.   12450.     6962    16638 #>  6 2020-05-20    63 rest_of_week   10659.    9416.   12066.     6701    16124 #>  7 2020-05-21    64 rest_of_week   10295.    9064.   11693.     6450    15626 #>  8 2020-05-22    65 rest_of_week    9943.    8724.   11333.     6208    15145 #>  9 2020-05-23    66 weekend         8330.    7138.    9721.     5079    12992 #> 10 2020-05-24    67 weekend         8045.    6872.    9419.     4889    12588 #> 11 2020-05-25    68 monday         10851.    9048.   13012.     6439    17388 #> 12 2020-05-26    69 rest_of_week    8652.    7486.   10001.     5326    13366 #> 13 2020-05-27    70 rest_of_week    8357.    7204.    9694.     5126    12955 #> 14 2020-05-28    71 rest_of_week    8071.    6933.    9396.     4933    12558  # without uncertainty fitted_model %>%    predict(pred_data, uncertain = FALSE) %>%    get_result() #> [[1]] #> <trending_prediction> 14 x 8 #>    date         day weekday      estimate lower_ci upper_ci lower_pi upper_pi #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week   12682.   11390.   14122.     9027    16948 #>  2 2020-05-16    59 weekend        10625.    9299.   12140.     7562    14199 #>  3 2020-05-17    60 weekend        10262.    8956.   11759.     7304    13715 #>  4 2020-05-18    61 monday         13840.   11749.   16303.     9852    18494 #>  5 2020-05-19    62 rest_of_week   11036.    9782.   12450.     7855    14748 #>  6 2020-05-20    63 rest_of_week   10659.    9416.   12066.     7586    14245 #>  7 2020-05-21    64 rest_of_week   10295.    9064.   11693.     7327    13758 #>  8 2020-05-22    65 rest_of_week    9943.    8724.   11333.     7076    13289 #>  9 2020-05-23    66 weekend         8330.    7138.    9721.     5928    11134 #> 10 2020-05-24    67 weekend         8045.    6872.    9419.     5725    10754 #> 11 2020-05-25    68 monday         10851.    9048.   13012.     7723    14501 #> 12 2020-05-26    69 rest_of_week    8652.    7486.   10001.     6157    11564 #> 13 2020-05-27    70 rest_of_week    8357.    7204.    9694.     5947    11170 #> 14 2020-05-28    71 rest_of_week    8071.    6933.    9396.     5743    10788  # without prediction intervals fitted_model %>%    predict(pred_data, add_pi = FALSE) %>%    get_result() #> [[1]] #> <trending_prediction> 14 x 6 #>    date         day weekday      estimate lower_ci upper_ci #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week   12682.   11390.   14122. #>  2 2020-05-16    59 weekend        10625.    9299.   12140. #>  3 2020-05-17    60 weekend        10262.    8956.   11759. #>  4 2020-05-18    61 monday         13840.   11749.   16303. #>  5 2020-05-19    62 rest_of_week   11036.    9782.   12450. #>  6 2020-05-20    63 rest_of_week   10659.    9416.   12066. #>  7 2020-05-21    64 rest_of_week   10295.    9064.   11693. #>  8 2020-05-22    65 rest_of_week    9943.    8724.   11333. #>  9 2020-05-23    66 weekend         8330.    7138.    9721. #> 10 2020-05-24    67 weekend         8045.    6872.    9419. #> 11 2020-05-25    68 monday         10851.    9048.   13012. #> 12 2020-05-26    69 rest_of_week    8652.    7486.   10001. #> 13 2020-05-27    70 rest_of_week    8357.    7204.    9694. #> 14 2020-05-28    71 rest_of_week    8071.    6933.    9396.  # bootstraped prediction intervals fitted_model %>%    predict(pred_data, simulate_pi = TRUE) %>%    get_result() #> [[1]] #> <trending_prediction> 14 x 8 #>    date         day weekday      estimate lower_ci upper_ci lower_pi upper_pi #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week   12682.   11390.   14122.     8819    17213 #>  2 2020-05-16    59 weekend        10625.    9299.   12140.     7347    14590 #>  3 2020-05-17    60 weekend        10262.    8956.   11759.     7215    13960 #>  4 2020-05-18    61 monday         13840.   11749.   16303.     9526    19036 #>  5 2020-05-19    62 rest_of_week   11036.    9782.   12450.     7655    14853 #>  6 2020-05-20    63 rest_of_week   10659.    9416.   12066.     7404    14528 #>  7 2020-05-21    64 rest_of_week   10295.    9064.   11693.     7244    13867 #>  8 2020-05-22    65 rest_of_week    9943.    8724.   11333.     6834    13646 #>  9 2020-05-23    66 weekend         8330.    7138.    9721.     5627    11459 #> 10 2020-05-24    67 weekend         8045.    6872.    9419.     5524    10948 #> 11 2020-05-25    68 monday         10851.    9048.   13012.     7248    15147 #> 12 2020-05-26    69 rest_of_week    8652.    7486.   10001.     5954    11921 #> 13 2020-05-27    70 rest_of_week    8357.    7204.    9694.     5699    11494 #> 14 2020-05-28    71 rest_of_week    8071.    6933.    9396.     5611    11173"},{"path":"http://www.reconverse.org/trending/dev/articles/Introduction.html","id":"example-of-failed-model-fitting","dir":"Articles","previous_headings":"Example usage","what":"Example of failed model fitting","title":"Introduction","text":"","code":"(model2  <- glm_nb_model(count ~ day + nonexistent)) #> Untrained trending model: #>     glm.nb(formula = count ~ day + nonexistent) (fitted_model2 <- fit(model2, fitting_data)) #> <trending_fit_tbl> 1 x 3 #>   result warnings errors    #>   <list> <list>   <list>    #> 1 <NULL> <NULL>   <chr [1]> get_result(fitted_model2) #> [[1]] #> NULL get_errors(fitted_model2) #> [[1]] #> [1] \"object 'nonexistent' not found\""},{"path":"http://www.reconverse.org/trending/dev/articles/Introduction.html","id":"multiple-models","dir":"Articles","previous_headings":"Example usage","what":"Multiple models","title":"Introduction","text":"fit function also works list input multiple models. can also used predict()","code":"models  <- list(   simple = lm_model(count ~ day),   glm_poisson = glm_model(count ~ day, family = \"poisson\"),   glm_negbin = glm_nb_model(count ~ day + weekday),   will_error = glm_nb_model(count ~ day + nonexistant) ) (fitted_tbl <- fit(models, fitting_data)) #> <trending_fit_tbl> 4 x 4 #>   model_name  result       warnings     errors       #>   <chr>       <named list> <named list> <named list> #> 1 simple      <lm>         <NULL>       <NULL>       #> 2 glm_poisson <glm>        <NULL>       <NULL>       #> 3 glm_negbin  <negbin>     <NULL>       <NULL>       #> 4 will_error  <NULL>       <NULL>       <chr [1]> get_result(fitted_tbl) #> $simple #>  #> Call: #> lm(formula = count ~ day, data = fitting_data) #>  #> Coefficients: #> (Intercept)          day   #>       69202        -1093   #>  #>  #> $glm_poisson #>  #> Call:  glm(formula = count ~ day, family = \"poisson\", data = fitting_data) #>  #> Coefficients: #> (Intercept)          day   #>    11.57014     -0.03822   #>  #> Degrees of Freedom: 42 Total (i.e. Null);  41 Residual #> Null Deviance:       321600  #> Residual Deviance: 50970     AIC: 51490 #>  #> $glm_negbin #>  #> Call:  glm.nb(formula = count ~ day + weekday, data = fitting_data,  #>     init.theta = 39.34595795, link = log) #>  #> Coefficients: #>    (Intercept)             day   weekdaymonday  weekdayweekend   #>       11.46417        -0.03476         0.19162        -0.14224   #>  #> Degrees of Freedom: 42 Total (i.e. Null);  39 Residual #> Null Deviance:       395.9  #> Residual Deviance: 43.17     AIC: 850.6 #>  #> $will_error #> NULL (pred <- predict(fitted_tbl, pred_data)) #> <trending_predict_tbl> 4 x 4 #>   model_name  result              warnings     errors       #>   <chr>       <named list>        <named list> <named list> #> 1 simple      <trndng_p [14 × 8]> <NULL>       <NULL>       #> 2 glm_poisson <trndng_p [14 × 8]> <NULL>       <NULL>       #> 3 glm_negbin  <trndng_p [14 × 8]> <NULL>       <NULL>       #> 4 will_error  <NULL>              <NULL>       <chr [1]> get_result(pred) #> $simple #> <trending_prediction> 14 x 8 #>    date         day weekday      estimate lower_ci upper_ci lower_pi upper_pi #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week    5813.     234.   11392.  -13007.   24632. #>  2 2020-05-16    59 weekend         4720.   -1053.   10492.  -14158.   23597. #>  3 2020-05-17    60 weekend         3627.   -2341.    9594.  -15311.   22565. #>  4 2020-05-18    61 monday          2534.   -3631.    8699.  -16467.   21535. #>  5 2020-05-19    62 rest_of_week    1441.   -4922.    7804.  -17626.   20508. #>  6 2020-05-20    63 rest_of_week     348.   -6215.    6911.  -18786.   19482. #>  7 2020-05-21    64 rest_of_week    -745.   -7509.    6020.  -19949.   18459. #>  8 2020-05-22    65 rest_of_week   -1838.   -8805.    5129.  -21114.   17439. #>  9 2020-05-23    66 weekend        -2931.  -10101.    4240.  -22282.   16420. #> 10 2020-05-24    67 weekend        -4024.  -11399.    3352.  -23451.   15404. #> 11 2020-05-25    68 monday         -5116.  -12697.    2464.  -24623.   14390. #> 12 2020-05-26    69 rest_of_week   -6209.  -13996.    1578.  -25797.   13378. #> 13 2020-05-27    70 rest_of_week   -7302.  -15296.     692.  -26973.   12369. #> 14 2020-05-28    71 rest_of_week   -8395.  -16597.    -193.  -28152.   11361. #>  #> $glm_poisson #> <trending_prediction> 14 x 8 #>    date         day weekday      estimate lower_ci upper_ci lower_pi upper_pi #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week   11535.   11484.   11587.    11275    11798 #>  2 2020-05-16    59 weekend        11103.   11052.   11154.    10846    11361 #>  3 2020-05-17    60 weekend        10686.   10636.   10737.    10434    10941 #>  4 2020-05-18    61 monday         10286.   10236.   10336.    10038    10536 #>  5 2020-05-19    62 rest_of_week    9900.    9850.    9950.     9656    10146 #>  6 2020-05-20    63 rest_of_week    9529.    9480.    9578.     9289     9770 #>  7 2020-05-21    64 rest_of_week    9171.    9123.    9220.     8936     9409 #>  8 2020-05-22    65 rest_of_week    8827.    8780.    8876.     8596     9061 #>  9 2020-05-23    66 weekend         8496.    8449.    8544.     8269     8726 #> 10 2020-05-24    67 weekend         8178.    8131.    8225.     7955     8403 #> 11 2020-05-25    68 monday          7871.    7825.    7917.     7652     8092 #> 12 2020-05-26    69 rest_of_week    7576.    7531.    7621.     7361     7793 #> 13 2020-05-27    70 rest_of_week    7292.    7247.    7337.     7081     7505 #> 14 2020-05-28    71 rest_of_week    7018.    6974.    7063.     6811     7228 #>  #> $glm_negbin #> <trending_prediction> 14 x 8 #>    date         day weekday      estimate lower_ci upper_ci lower_pi upper_pi #>    <date>     <int> <fct>           <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1 2020-05-15    58 rest_of_week   12682.   11390.   14122.     8107    18870 #>  2 2020-05-16    59 weekend        10625.    9299.   12140.     6618    16223 #>  3 2020-05-17    60 weekend        10262.    8956.   11759.     6373    15714 #>  4 2020-05-18    61 monday         13840.   11749.   16303.     8363    21784 #>  5 2020-05-19    62 rest_of_week   11036.    9782.   12450.     6962    16638 #>  6 2020-05-20    63 rest_of_week   10659.    9416.   12066.     6701    16124 #>  7 2020-05-21    64 rest_of_week   10295.    9064.   11693.     6450    15626 #>  8 2020-05-22    65 rest_of_week    9943.    8724.   11333.     6208    15145 #>  9 2020-05-23    66 weekend         8330.    7138.    9721.     5079    12992 #> 10 2020-05-24    67 weekend         8045.    6872.    9419.     4889    12588 #> 11 2020-05-25    68 monday         10851.    9048.   13012.     6439    17388 #> 12 2020-05-26    69 rest_of_week    8652.    7486.   10001.     5326    13366 #> 13 2020-05-27    70 rest_of_week    8357.    7204.    9694.     5126    12955 #> 14 2020-05-28    71 rest_of_week    8071.    6933.    9396.     4933    12558 #>  #> $will_error #> NULL"},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Prediction intervals for GLMs","text":"implementation prediction intervals (simulate_pi = FALSE) follows described Gavin Simpson two posts blog. Whilst follows brief overview, detail, including discussion whether makes sense calculate intervals, can found following post.","code":""},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"confidence-interval","dir":"Articles","previous_headings":"Overview","what":"Confidence interval","title":"Prediction intervals for GLMs","text":"calculate prediction intervals first calculate confidence interval scale linear predictor. upper lower bounds interval, fed inverse link function turn gives us confidence interval expected response.","code":""},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"prediction-interval","dir":"Articles","previous_headings":"Overview","what":"Prediction interval","title":"Prediction intervals for GLMs","text":"calculated confidence interval response feed upper lower bounds, quantile function associated relevant distribution. maximum minimum values output used upper lower bounds prediction interval.","code":""},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"comparison-to-a-bootstrap-approach","dir":"Articles","previous_headings":"","what":"Comparison to a bootstrap approach","title":"Prediction intervals for GLMs","text":"compare prediction intervals trending generated ciTools package. ciTools uses parametric bootstrap approach expectation trending produce conservative (wider) interval allow uncertainty around estimate, less conservative (narrower) interval uncertainty ignored. following examples build discussed ciTools glm vignette:","code":""},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"setup","dir":"Articles","previous_headings":"Comparison to a bootstrap approach","what":"setup","title":"Prediction intervals for GLMs","text":"","code":"library(ciTools) library(trending) library(ggplot2) library(patchwork) library(MASS)"},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"example-1---poisson","dir":"Articles","previous_headings":"Comparison to a bootstrap approach","what":"Example 1 - Poisson","title":"Prediction intervals for GLMs","text":"","code":"# generate data x <- rnorm(100, mean = 0) y <- rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) fit <- glm(y ~ x , family = poisson(link = \"log\"))  # use ciTools to add prediction interval dat1 <- add_pi(dat, fit, names = c(\"lpb\", \"upb\"), alpha = 0.1, nsims = 20000) #> Warning in add_pi.glm(dat, fit, names = c(\"lpb\", \"upb\"), alpha = 0.1, nsims = #> 20000): The response is not continuous, so Prediction Intervals are approximate head(dat1) #>            x y     pred lpb upb #> 1 -0.2371830 5 4.238952   1   8 #> 2  0.3027586 7 5.642549   2  10 #> 3 -0.4662134 2 3.754643   1   7 #> 4 -0.5188776 2 3.651346   1   7 #> 5  0.8089458 8 7.377797   3  12 #> 6  0.8142616 8 7.398602   3  12  # add intervals with trending (no uncertainty in parameters) poisson_model <- glm_model(y ~ x, family = \"poisson\") fitted_model <- fit(poisson_model, dat) dat2 <- predict(fitted_model, simulate_pi = FALSE, uncertain = FALSE, alpha = 0.1) dat2 <- get_result(dat2) head(dat2[[1]]) #> <trending_prediction> 6 x 7 #>       y      x estimate lower_ci upper_ci lower_pi upper_pi #>   <int>  <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1     5 -0.237     4.24     3.88     4.64        1        8 #> 2     7  0.303     5.64     5.25     6.06        2       10 #> 3     2 -0.466     3.75     3.39     4.16        1        7 #> 4     2 -0.519     3.65     3.28     4.06        1        7 #> 5     8  0.809     7.38     6.82     7.98        3       12 #> 6     8  0.814     7.40     6.84     8.00        3       12  # add intervals with trending (uncertainty in parameters) dat3 <- predict(fitted_model, simulate_pi = FALSE, alpha = 0.1) dat3 <- get_result(dat3) head(dat3[[1]]) #> <trending_prediction> 6 x 7 #>       y      x estimate lower_ci upper_ci lower_pi upper_pi #>   <int>  <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1     5 -0.237     4.24     3.88     4.64        1        8 #> 2     7  0.303     5.64     5.25     6.06        2       10 #> 3     2 -0.466     3.75     3.39     4.16        1        8 #> 4     2 -0.519     3.65     3.28     4.06        1        8 #> 5     8  0.809     7.38     6.82     7.98        3       13 #> 6     8  0.814     7.40     6.84     8.00        3       13  # plots p1 <- ggplot(dat1, aes(x, y)) +   geom_point(size = 1) +   geom_line(aes(y = pred), size = 1.2) +   geom_ribbon(aes(ymin = lpb, ymax = upb), alpha = 0.2) +   geom_ribbon(aes(ymin = `lower_pi`, ymax = `upper_pi`), data = dat2[[1]], alpha = 0.4) +   ggtitle(     \"Poisson regression with prediction intervals and no uncertainty in parameters\",      subtitle = \"Model fit (black line), with bootstrap intervals (gray), parametric intervals (dark gray)\"   ) +   coord_cartesian(ylim=c(0, 30)) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead.  p2 <- ggplot(dat1, aes(x, y)) +   geom_point(size = 1) +   geom_line(aes(y = pred), size = 1.2) +   geom_ribbon(aes(ymin = lpb, ymax = upb), alpha = 0.4) +   geom_ribbon(aes(ymin = `lower_pi`, ymax = `upper_pi`), data = dat3[[1]], alpha = 0.2) +   ggtitle(     \"Poisson regression with prediction intervals and uncertainty in parameters\",      subtitle = \"Model fit (black line), with parametric intervals (gray), bootstrap intervals (dark gray)\"   ) +   coord_cartesian(ylim=c(0, 30))  p1 / p2"},{"path":"http://www.reconverse.org/trending/dev/articles/prediction_intervals.html","id":"example-2---quassipoisson","dir":"Articles","previous_headings":"Comparison to a bootstrap approach","what":"Example 2 - Quassipoisson","title":"Prediction intervals for GLMs","text":"","code":"# generate data x <- runif(n = 100, min = 0, max = 2) mu <- exp(1 + x) y <- rnegbin(n = 100, mu = mu, theta = mu/(5 - 1)) dat <- data.frame(x = x, y = y) fit <- glm(y ~ x, family = quasipoisson(link = \"log\"))  # use ciTools to add prediction interval dat1 <- add_pi(dat, fit, names = c(\"lpb\", \"upb\"), alpha = 0.1, nsims = 20000) #> Warning in add_pi.glm(dat, fit, names = c(\"lpb\", \"upb\"), alpha = 0.1, nsims = #> 20000): The response is not continuous, so Prediction Intervals are approximate head(dat1) #>           x  y      pred lpb upb #> 1 1.3185688  7  9.315308   2  20 #> 2 0.8402462  6  5.094015   0  13 #> 3 1.6213157 16 13.649373   4  27 #> 4 1.0692339  6  6.800694   1  16 #> 5 0.3934254  2  2.898594   0  10 #> 6 0.2041044 12  2.282617   0   8  # add intervals with trending (no uncertainty in parameters) quasipoisson_model <- glm_model(y ~ x, family = quasipoisson(link = \"log\")) fitted_model <- fit(quasipoisson_model, dat) dat2 <- predict(fitted_model, simulate_pi = FALSE,  uncertain = FALSE, alpha = 0.1) dat2 <- get_result(dat2) head(dat2[[1]]) #> <trending_prediction> 6 x 7 #>       y     x estimate lower_ci upper_ci lower_pi upper_pi #>   <int> <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1     7 1.32      9.32     8.34    10.4         2       20 #> 2     6 0.840     5.09     4.35     5.97        0       13 #> 3    16 1.62     13.6     12.0     15.5         4       26 #> 4     6 1.07      6.80     5.99     7.72        1       16 #> 5     2 0.393     2.90     2.28     3.69        0        9 #> 6    12 0.204     2.28     1.72     3.02        0        8  # add intervals with trending (uncertainty in parameters) dat3 <- predict(fitted_model, simulate_pi = FALSE, alpha = 0.1) dat3 <- get_result(dat3) head(dat3[[1]]) #> <trending_prediction> 6 x 7 #>       y     x estimate lower_ci upper_ci lower_pi upper_pi #>   <int> <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1     7 1.32      9.32     8.34    10.4         2       22 #> 2     6 0.840     5.09     4.35     5.97        0       15 #> 3    16 1.62     13.6     12.0     15.5         3       29 #> 4     6 1.07      6.80     5.99     7.72        1       17 #> 5     2 0.393     2.90     2.28     3.69        0       11 #> 6    12 0.204     2.28     1.72     3.02        0        9  # plots p3 <- ggplot(dat1, aes(x, y)) +   geom_point(size = 1) +   geom_line(aes(y = pred), size = 1.2) +   geom_ribbon(aes(ymin = lpb, ymax = upb), alpha = 0.2) +   geom_ribbon(aes(ymin = `lower_pi`, ymax = `upper_pi`), data = dat2[[1]], alpha = 0.4) +   ggtitle(     \"Quasipoisson regression with prediction intervals and no uncertainty in parameters\",      subtitle = \"Model fit (black line), with bootstrap intervals (gray), parametric intervals (dark gray)\"   ) +   coord_cartesian(ylim=c(0, 30))  p4 <- ggplot(dat1, aes(x, y)) +   geom_point(size = 1) +   geom_line(aes(y = pred), size = 1.2) +   geom_ribbon(aes(ymin = lpb, ymax = upb), alpha = 0.4) +   geom_ribbon(aes(ymin = `lower_pi`, ymax = `upper_pi`), data = dat3[[1]], alpha = 0.2) +   ggtitle(     \"Quasipoisson regression with prediction intervals and uncertainty in parameters\",     subtitle = \"Model fit (black line), with parametric intervals (gray), bootstrap intervals (dark gray)\"   ) +   coord_cartesian(ylim=c(0, 30))  p3 / p4"},{"path":"http://www.reconverse.org/trending/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tim Taylor. Author. Dirk Schumacher. Contributor. Thibaut Jombart. Contributor, maintainer.","code":""},{"path":"http://www.reconverse.org/trending/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylor T (2023). trending: Model Temporal Trends. R package version 0.0.3.9001, https://github.com/reconverse/trending.","code":"@Manual{,   title = {trending: Model Temporal Trends},   author = {Tim Taylor},   year = {2023},   note = {R package version 0.0.3.9001},   url = {https://github.com/reconverse/trending}, }"},{"path":"http://www.reconverse.org/trending/dev/index.html","id":"trending","dir":"","previous_headings":"","what":"Model Temporal Trends","title":"Model Temporal Trends","text":"trending aims provides coherent interface several modelling tools. Whilst useful interactive context, ’s main focus provide intuitive interface packages can developed (e.g. trendbreaker).","code":""},{"path":"http://www.reconverse.org/trending/dev/index.html","id":"installing-the-package","dir":"","previous_headings":"","what":"Installing the package","title":"Model Temporal Trends","text":"can install stable version CRAN : development version can installed GitHub :","code":"install.packages(\"trending\") if (!require(remotes)) {   install.packages(\"remotes\") } remotes::install_github(\"reconverse/trending\", build_vignettes = TRUE)"},{"path":"http://www.reconverse.org/trending/dev/index.html","id":"main-features","dir":"","previous_headings":"","what":"Main features","title":"Model Temporal Trends","text":"Model specification: Interfaces common models intuitive functions; lm_model(), glm_model(), glm_nb_model brms_model*. Model fitting prediction: specified, models can fit data generate confidence prediction intervals future data using fit() predict(). Error warning catching: provided methods fit predict catch warnings errors, returning output captured values list. *   Requires brms","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Model Temporal Trends","text":"overview trending provided included vignette: * vignette(\"Introduction\", package = \"trending\")","code":""},{"path":"http://www.reconverse.org/trending/dev/index.html","id":"getting-help-online","dir":"","previous_headings":"","what":"Getting help online","title":"Model Temporal Trends","text":"Bug reports feature requests posted github using issue system. questions posted RECON slack channel see https://www.repidemicsconsortium.org/forum/ details join.","code":""},{"path":"http://www.reconverse.org/trending/dev/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Model Temporal Trends","text":"Gavin Simpson; method calculate prediction intervals follows one described two posts blog; see part 1 part 2. John Haman Matthew Avery; implementation prediction intervals guided bootstrapped approach within ciTools package.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessors generics — accessors","title":"Accessors generics — accessors","text":"Generics accessing model information.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessors generics — accessors","text":"","code":"get_result(x, ...)  # S3 method for default get_result(x, ...)  # S3 method for trending_fit get_result(x, ...)  # S3 method for trending_predict get_result(x, ...)  # S3 method for trending_fit_tbl get_result(x, ...)  # S3 method for trending_predict_tbl get_result(x, ...)  get_warnings(x, ...)  # S3 method for default get_warnings(x, ...)  # S3 method for trending_fit get_warnings(x, ...)  # S3 method for trending_predict get_warnings(x, ...)  # S3 method for trending_fit_tbl get_warnings(x, ...)  # S3 method for trending_predict_tbl get_warnings(x, ...)  get_errors(x, ...)  # S3 method for default get_errors(x, ...)  # S3 method for trending_fit get_errors(x, ...)  # S3 method for trending_predict get_errors(x, ...)  # S3 method for trending_fit_tbl get_errors(x, ...)  # S3 method for trending_predict_tbl get_errors(x, ...)  get_fitted_model(x, ...)  # S3 method for default get_fitted_model(x, ...)  # S3 method for trending_fit get_fitted_model(x, ...)  # S3 method for trending_fit_tbl get_fitted_model(x, ...)  get_fitted_data(x, ...)  # S3 method for default get_fitted_data(x, ...)  # S3 method for trending_fit get_fitted_data(x, ...)  # S3 method for trending_fit_tbl get_fitted_data(x, ...)  get_formula(x, ...)  # S3 method for default get_formula(x, ...)  # S3 method for trending_model get_formula(x, ...)  # S3 method for trending_fit get_formula(x, ...)  # S3 method for trending_fit_tbl get_formula(x, ...)  get_response(x, ...)  # S3 method for default get_response(x, ...)  # S3 method for trending_model get_response(x, ...)  # S3 method for trending_fit get_response(x, ...)  # S3 method for trending_fit_tbl get_response(x, ...)  # S3 method for trending_prediction get_response(x, ...)  # S3 method for trending_predict get_response(x, ...)  # S3 method for trending_predict_tbl get_response(x, ...)  get_predictors(x, ...)  # S3 method for default get_predictors(x, ...)  # S3 method for trending_model get_predictors(x, ...)  # S3 method for trending_fit get_predictors(x, ...)  # S3 method for trending_fit_tbl get_predictors(x, ...)  # S3 method for trending_prediction get_predictors(x, ...)  # S3 method for trending_predict get_predictors(x, ...)  # S3 method for trending_predict_tbl get_predictors(x, ...)  get_estimate(x, ...)  # S3 method for default get_estimate(x, ...)  # S3 method for trending_prediction get_estimate(x, ...)  # S3 method for trending_predict get_estimate(x, ...)  # S3 method for trending_predict_tbl get_estimate(x, ...)"},{"path":"http://www.reconverse.org/trending/dev/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessors generics — accessors","text":"x R object. ... currently used methods.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessors generics — accessors","text":"get_result(): captured output. get_warnings(): captured warnings. get_errors(): captured warnings. get_fitted_data: underlying data used fit model. get_fitted_model(): underlying fitted model. get_formula(): formula used model temporal trends. get_response(): response variable underlying model. get_predictors(): predictor variable(s) underlying model.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/accessors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessors generics — accessors","text":"Methods provided  trending_model, trending_fit, trending_fit_tbl, trending_predict, trending_predict_tbl objects.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessors generics — accessors","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") fitted_poisson <- fit(poisson_model, dat)  get_fitted_model(fitted_poisson) #> [[1]] #>  #> Call:  glm(formula = y ~ x, family = \"poisson\", data = dat) #>  #> Coefficients: #> (Intercept)            x   #>       1.451        0.557   #>  #> Degrees of Freedom: 99 Total (i.e. Null);  98 Residual #> Null Deviance:\t    211.5  #> Residual Deviance: 108.1 \tAIC: 423.4 #>  get_formula(fitted_poisson) #> [[1]] #> y ~ x #> <environment: 0x55e487b30bd8> #>  get_response(fitted_poisson) #> [[1]] #> [1] \"y\" #>  get_predictors(fitted_poisson) #> [[1]] #> [1] \"x\" #>"},{"path":"http://www.reconverse.org/trending/dev/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit generic — fit","title":"Fit generic — fit","text":"fit() generic fit specified model.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit generic — fit","text":"","code":"fit(x, data, ...)  # S3 method for default fit(x, data, ...)"},{"path":"http://www.reconverse.org/trending/dev/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit generic — fit","text":"x R object data data frame containing data fit. ... Arguments passed underlying methods.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit generic — fit","text":"value returned depends class input argument.","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit generic — fit","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit generic — fit","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y)  poisson_model <- glm_model(y ~ x , family = poisson) negbin_model <- glm_nb_model(y ~ x)  fit(poisson_model, dat) #> <trending_fit_tbl> 1 x 3 #>   result warnings errors #>   <list> <list>   <list> #> 1 <glm>  <NULL>   <NULL> fit(negbin_model, dat) #> <trending_fit_tbl> 1 x 3 #>   result   warnings errors #>   <list>   <list>   <list> #> 1 <negbin> <NULL>   <NULL> fit(list(poisson_model, negbin_model), dat) #> <trending_fit_tbl> 2 x 3 #>   result warnings errors    #>   <list> <list>   <list>    #> 1 <NULL> <NULL>   <chr [1]> #> 2 <NULL> <NULL>   <chr [1]> fit(list(pm = poisson_model, nm = negbin_model), dat) #> <trending_fit_tbl> 2 x 4 #>   model_name result       warnings     errors       #>   <chr>      <named list> <named list> <named list> #> 1 pm         <NULL>       <NULL>       <chr [1]>    #> 2 nm         <NULL>       <NULL>       <chr [1]>"},{"path":"http://www.reconverse.org/trending/dev/reference/fit.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit method list object — fit.list","title":"Fit method list object — fit.list","text":"Fits list trending_model objects given input data.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit method list object — fit.list","text":"","code":"# S3 method for list fit(x, data, ...)"},{"path":"http://www.reconverse.org/trending/dev/reference/fit.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit method list object — fit.list","text":"x list trending_model objects data data frame containing data fit. ... currently used.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit method list object — fit.list","text":"trending_fit_tbl object tibble subclass one row model entries: model_name (optional): input named list name extracted. result: resulting fit calling underlying model directly, .e. lm_model: fitted model object class lm glm_model: fitted model object class glm glm_nb_model: fitted model object class negbin brm_model: object class brmsfit NULL fitting fails. warnings: warnings generated fitting errors: errors generated fitting","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/fit.list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit method list object — fit.list","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit method list object — fit.list","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = poisson) negbin_model <- glm_nb_model(y ~ x)  fit(list(poisson_model, negbin_model), dat) #> <trending_fit_tbl> 2 x 3 #>   result warnings errors    #>   <list> <list>   <list>    #> 1 <NULL> <NULL>   <chr [1]> #> 2 <NULL> <NULL>   <chr [1]> fit(list(pm = poisson_model, nm = negbin_model), dat) #> <trending_fit_tbl> 2 x 4 #>   model_name result       warnings     errors       #>   <chr>      <named list> <named list> <named list> #> 1 pm         <NULL>       <NULL>       <chr [1]>    #> 2 nm         <NULL>       <NULL>       <chr [1]>"},{"path":"http://www.reconverse.org/trending/dev/reference/fit.trending_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit method for trending_model objects — fit.trending_model","title":"Fit method for trending_model objects — fit.trending_model","text":"Fits specified model input data","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.trending_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit method for trending_model objects — fit.trending_model","text":"","code":"# S3 method for trending_model fit(x, data, as_tibble = TRUE, ...)"},{"path":"http://www.reconverse.org/trending/dev/reference/fit.trending_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit method for trending_model objects — fit.trending_model","text":"x R object data data frame containing data fit. as_tibble output converted tibble subclass. ... currently used.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.trending_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit method for trending_model objects — fit.trending_model","text":"as_tibble = FALSE, trending_fit object returned. list subclass entries: result: resulting fit calling underlying model directly, .e. lm_model: fitted model object class lm glm_model: fitted model object class glm glm_nb_model: fitted model object class negbin brm_model: object class brmsfit NULL fitting fails. warnings: warnings generated fitting errors: errors generated fitting as_tibble = TRUE, trending_fit_tbl object tibble subclass one row model columns 'result', 'warnings' 'errors' contents .","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/fit.trending_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit method for trending_model objects — fit.trending_model","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/fit.trending_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit method for trending_model objects — fit.trending_model","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y)  poisson_model <- glm_model(y ~ x , family = poisson) negbin_model <- glm_nb_model(y ~ x)  fit(poisson_model, dat) #> <trending_fit_tbl> 1 x 3 #>   result warnings errors #>   <list> <list>   <list> #> 1 <glm>  <NULL>   <NULL> fit(negbin_model, dat) #> <trending_fit_tbl> 1 x 3 #>   result   warnings errors #>   <list>   <list>   <list> #> 1 <negbin> <NULL>   <NULL> fit(list(poisson_model, negbin_model), dat) #> <trending_fit_tbl> 2 x 3 #>   result warnings errors    #>   <list> <list>   <list>    #> 1 <NULL> <NULL>   <chr [1]> #> 2 <NULL> <NULL>   <chr [1]> fit(list(pm = poisson_model, nm = negbin_model), dat) #> <trending_fit_tbl> 2 x 4 #>   model_name result       warnings     errors       #>   <chr>      <named list> <named list> <named list> #> 1 pm         <NULL>       <NULL>       <chr [1]>    #> 2 nm         <NULL>       <NULL>       <chr [1]>"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.list.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for trending_model objects — predict.list","title":"Predict method for trending_model objects — predict.list","text":"Adds estimated values associated confidence /prediction intervals data based trending_model fit.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for trending_model objects — predict.list","text":"","code":"# S3 method for list predict(   object,   data,   name = \"estimate\",   alpha = 0.05,   add_ci = TRUE,   ci_names = c(\"lower_ci\", \"upper_ci\"),   add_pi = TRUE,   pi_names = c(\"lower_pi\", \"upper_pi\"),   simulate_pi = FALSE,   sims = 2000,   uncertain = TRUE,   ... )"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for trending_model objects — predict.list","text":"object list trending_model objects. data data.frame containing data model fit estimates derived. name Character vector length one giving name use calculated estimate. alpha alpha threshold used prediction intervals, defaulting 0.05, .e. 95% prediction intervals derived. add_ci confidence interval added output. Default TRUE. ci_names Names use resulting confidence intervals. add_pi prediction interval added output. Default TRUE. pi_names Names use resulting prediction intervals. simulate_pi prediction intervals glm models simulated. TRUE, default, predict() uses ciTools::add_pi() function generate intervals. sims number simulations run simulating prediction intervals glm model. uncertain used glm models simulate_pi = FALSE. Default TRUE.  FALSE uncertainty fitted parameters ignored generating parametric prediction intervals. ... currently used.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for trending_model objects — predict.list","text":"trending_predict_tbl object tibble subclass one row per model columns: result: input data frame additional estimates , optionally, confidence prediction intervals. NULL associated predict method fails. warnings: warnings generated prediction. errors: errors generated prediction.","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/predict.list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict method for trending_model objects — predict.list","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method for trending_model objects — predict.list","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) predict(list(poisson_model, negbin_model), dat) #> <trending_predict_tbl> 2 x 3 #>   result               warnings errors #>   <list>               <list>   <list> #> 1 <trndng_p [100 × 7]> <NULL>   <NULL> #> 2 <trndng_p [100 × 7]> <NULL>   <NULL> predict(list(pm = poisson_model, nm = negbin_model), dat) #> <trending_predict_tbl> 2 x 4 #>   model_name result               warnings     errors       #>   <chr>      <named list>         <named list> <named list> #> 1 pm         <trndng_p [100 × 7]> <NULL>       <NULL>       #> 2 nm         <trndng_p [100 × 7]> <NULL>       <NULL>"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for trending_fit object — predict.trending_fit","title":"Predict method for trending_fit object — predict.trending_fit","text":"Adds estimated values associated confidence /prediction intervals trending_fit objects.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for trending_fit object — predict.trending_fit","text":"","code":"# S3 method for trending_fit predict(   object,   new_data,   name = \"estimate\",   alpha = 0.05,   add_ci = TRUE,   ci_names = c(\"lower_ci\", \"upper_ci\"),   add_pi = TRUE,   pi_names = c(\"lower_pi\", \"upper_pi\"),   simulate_pi = FALSE,   sims = 2000,   uncertain = TRUE,   as_tibble = TRUE,   ... )"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for trending_fit object — predict.trending_fit","text":"object trending_fit object. new_data data.frame containing data estimates derived. missing, model frame fit data used. name Character vector length one giving name use calculated estimate. alpha alpha threshold used prediction intervals, defaulting 0.05, .e. 95% prediction intervals derived. add_ci confidence interval added output. Default TRUE. ci_names Names use resulting confidence intervals. add_pi prediction interval added output. Default TRUE. pi_names Names use resulting prediction intervals. simulate_pi prediction intervals glm models simulated. TRUE, default, predict() uses ciTools::add_pi() function generate intervals. sims number simulations run simulating prediction intervals glm model. uncertain used glm models simulate_pi = FALSE. Default TRUE.  FALSE uncertainty fitted parameters ignored generating parametric prediction intervals. as_tibble output converted tibble subclass. ... currently used.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for trending_fit object — predict.trending_fit","text":"as_tibble = FALSE, trending_predict object, list subclass, entries: result: input data frame additional estimates , optionally, confidence prediction intervals. NULL associated predict method fails. warnings: warnings generated prediction. errors: errors generated prediction. as_tibble = TRUE, trending_predict_tbl object tibble subclass one row per model columns 'result', 'warnings' 'errors' contents .","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict method for trending_fit object — predict.trending_fit","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method for trending_fit object — predict.trending_fit","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") fitted_poisson <- fit(poisson_model, dat) predict(fitted_poisson) #> <trending_predict_tbl> 1 x 3 #>   result               warnings errors #>   <list>               <list>   <list> #> 1 <trndng_p [100 × 7]> <NULL>   <NULL> predict(fitted_poisson, as_tibble = FALSE) #> <trending_predict_tbl> 1 x 3 #>   result               warnings errors #>   <list>               <list>   <list> #> 1 <trndng_p [100 × 7]> <NULL>   <NULL>"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","title":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","text":"Adds estimated values associated confidence /prediction intervals trending_fit_tbl objects.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","text":"","code":"# S3 method for trending_fit_tbl predict(   object,   new_data,   name = \"estimate\",   alpha = 0.05,   add_ci = TRUE,   ci_names = c(\"lower_ci\", \"upper_ci\"),   add_pi = TRUE,   pi_names = c(\"lower_pi\", \"upper_pi\"),   simulate_pi = FALSE,   sims = 2000,   uncertain = TRUE,   ... )"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","text":"object trending_fit_tbl object. new_data data.frame containing data estimates derived. missing, model frame fit data used. name Character vector length one giving name use calculated estimate. alpha alpha threshold used prediction intervals, defaulting 0.05, .e. 95% prediction intervals derived. add_ci confidence interval added output. Default TRUE. ci_names Names use resulting confidence intervals. add_pi prediction interval added output. Default TRUE. pi_names Names use resulting prediction intervals. simulate_pi prediction intervals glm models simulated. TRUE, default, predict() uses ciTools::add_pi() function generate intervals. sims number simulations run simulating prediction intervals glm model. uncertain used glm models simulate_pi = FALSE. Default TRUE.  FALSE uncertainty fitted parameters ignored generating parametric prediction intervals. ... currently used.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","text":"trending_predict_tbl object tibble subclass one row per model columns 'result', 'warnings' 'errors' contents .: result: input data frame additional estimates , optionally, confidence prediction intervals. NULL associated predict method fails. warnings: warnings generated prediction. errors: errors generated prediction.","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_fit_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method for trending_fit_tbl object — predict.trending_fit_tbl","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x) fitted_tbl <- fit(list(poisson_model, negbin_model), dat)  predict(fitted_tbl) #> <trending_predict_tbl> 2 x 3 #>   result warnings errors    #>   <list> <list>   <list>    #> 1 <NULL> <NULL>   <chr [1]> #> 2 <NULL> <NULL>   <chr [1]>"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for trending_model objects — predict.trending_model","title":"Predict method for trending_model objects — predict.trending_model","text":"Adds estimated values associated confidence /prediction intervals data based trending_model fit.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for trending_model objects — predict.trending_model","text":"","code":"# S3 method for trending_model predict(   object,   data,   name = \"estimate\",   alpha = 0.05,   add_ci = TRUE,   ci_names = c(\"lower_ci\", \"upper_ci\"),   add_pi = TRUE,   pi_names = c(\"lower_pi\", \"upper_pi\"),   simulate_pi = FALSE,   sims = 2000,   uncertain = TRUE,   as_tibble = TRUE,   ... )"},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for trending_model objects — predict.trending_model","text":"object trending_model object. data data.frame containing data model fit estimates derived. name Character vector length one giving name use calculated estimate. alpha alpha threshold used prediction intervals, defaulting 0.05, .e. 95% prediction intervals derived. add_ci confidence interval added output. Default TRUE. ci_names Names use resulting confidence intervals. add_pi prediction interval added output. Default TRUE. pi_names Names use resulting prediction intervals. simulate_pi prediction intervals glm models simulated. TRUE, default, predict() uses ciTools::add_pi() function generate intervals. sims number simulations run simulating prediction intervals glm model. uncertain used glm models simulate_pi = FALSE. Default TRUE.  FALSE uncertainty fitted parameters ignored generating parametric prediction intervals. as_tibble output converted tibble subclass. ... currently used.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for trending_model objects — predict.trending_model","text":"as_tibble = FALSE, trending_predict object, list subclass, entries: result: input data frame additional estimates , optionally, confidence prediction intervals. NULL associated predict method fails. warnings: warnings generated prediction. errors: errors generated prediction. as_tibble = TRUE, trending_predict_tbl object tibble subclass one row per model columns 'result', 'warnings' 'errors' contents .","code":""},{"path":[]},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predict method for trending_model objects — predict.trending_model","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/predict.trending_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict method for trending_model objects — predict.trending_model","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x)) dat <- data.frame(x = x, y = y) poisson_model <- glm_model(y ~ x , family = \"poisson\") predict(poisson_model, dat) #> <trending_predict_tbl> 1 x 3 #>   result               warnings errors #>   <list>               <list>   <list> #> 1 <trndng_p [100 × 7]> <NULL>   <NULL> predict(poisson_model, dat, as_tibble = FALSE) #> $result #> <trending_prediction> 100 x 7 #>          x     y estimate lower_ci upper_ci lower_pi upper_pi #>      <dbl> <int>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #>  1  1.00       4     7.10     6.42     7.86        2       14 #>  2 -0.205      5     4.49     4.06     4.96        1       10 #>  3 -0.802      2     3.58     3.13     4.09        0        8 #>  4  1.16       6     7.54     6.76     8.41        2       15 #>  5 -1.63       2     2.61     2.15     3.18        0        7 #>  6 -0.928      4     3.41     2.95     3.93        0        8 #>  7  0.669      6     6.26     5.73     6.85        2       12 #>  8 -0.511      6     4.00     3.56     4.49        0        9 #>  9  0.781      8     6.53     5.96     7.17        2       13 #> 10  0.0737     5     4.99     4.56     5.46        1       10 #> # … with 90 more rows #>  #> $warnings #> NULL #>  #> $errors #> NULL #>  #> attr(,\"class\") #> [1] \"trending_predict\" \"list\""},{"path":"http://www.reconverse.org/trending/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. MASS glm.nb","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Modeling interface — trending_model","title":"Modeling interface — trending_model","text":"functions wrap various modelling tools ensure consistent input trending functions. work capturing underlying model call decoupling data specification. makes easy use underlying model specification fitting procedure across different data sets. See details available model interfaces.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modeling interface — trending_model","text":"","code":"lm_model(formula, ...)  glm_model(formula, family = gaussian, ...)  glm_nb_model(formula, ...)  brm_model(formula, ...)"},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modeling interface — trending_model","text":"formula formula model, response variable left tilde symbol, predictors right hand-side; variable names used formula need matched columns data input functions. ... arguments passed underlying models exception data. family Link function used glm model.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modeling interface — trending_model","text":"trending_model object.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Modeling interface — trending_model","text":"following interfaces available: lm_model: interface linear models implemented stats::lm(). glm_model: interface generalised linear models (GLMs) implemented stats::glm(). glm_nb_model: interface negative binomial generalied linear models implemented MASS::glm.nb(). brm_model: interface Bayesian regression models implemented brms::brm(). interfaces accept inputs underlying model functions require, accept, data argument. Fitting handled instead fit() generic associated methods.","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Modeling interface — trending_model","text":"Tim Taylor","code":""},{"path":"http://www.reconverse.org/trending/dev/reference/trending_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modeling interface — trending_model","text":"","code":"x = rnorm(100, mean = 0) y = rpois(n = 100, lambda = exp(1.5 + 0.5*x))  poisson_model <- glm_model(y ~ x , family = \"poisson\") negbin_model <- glm_nb_model(y ~ x)"},{"path":"http://www.reconverse.org/trending/dev/news/index.html","id":"trending-003","dir":"Changelog","previous_headings":"","what":"trending 0.0.3","title":"trending 0.0.3","text":"CRAN release: 2021-04-19 Default using ciTools simulation approach prediction intervals.","code":""},{"path":"http://www.reconverse.org/trending/dev/news/index.html","id":"trending-002","dir":"Changelog","previous_headings":"","what":"trending 0.0.2","title":"trending 0.0.2","text":"CRAN release: 2020-11-18 fit now returns subclass tibble instead list. predict now returns tibble instead list. better compatibility dplyr verbs.","code":""},{"path":"http://www.reconverse.org/trending/dev/news/index.html","id":"trending-001","dir":"Changelog","previous_headings":"","what":"trending 0.0.1","title":"trending 0.0.1","text":"Initial release.","code":""}]
