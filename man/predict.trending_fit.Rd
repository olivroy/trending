% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict.trending_fit}
\alias{predict.trending_fit}
\alias{predict.trending_fit_list}
\alias{predict.trending_fit_tbl}
\title{Predict method for trending_fit objects}
\usage{
\method{predict}{trending_fit}(
  object,
  new_data,
  name = "estimate",
  alpha = 0.05,
  add_ci = TRUE,
  ci_names = c("lower_ci", "upper_ci"),
  add_pi = TRUE,
  pi_names = c("lower_pi", "upper_pi"),
  simulate_pi = FALSE,
  sims = 2000,
  uncertain = TRUE,
  as_tibble = FALSE,
  ...
)

\method{predict}{trending_fit_list}(
  object,
  new_data,
  name = "estimate",
  alpha = 0.05,
  add_ci = TRUE,
  ci_names = c("lower_ci", "upper_ci"),
  add_pi = TRUE,
  pi_names = c("lower_pi", "upper_pi"),
  simulate_pi = FALSE,
  sims = 2000,
  uncertain = TRUE,
  as_tibble = FALSE,
  ...
)

\method{predict}{trending_fit_tbl}(
  object,
  new_data,
  name = "estimate",
  alpha = 0.05,
  add_ci = TRUE,
  ci_names = c("lower_ci", "upper_ci"),
  add_pi = TRUE,
  pi_names = c("lower_pi", "upper_pi"),
  simulate_pi = FALSE,
  sims = 2000,
  uncertain = TRUE,
  as_tibble = FALSE,
  ...
)
}
\arguments{
\item{object}{A \code{\link[=fit.trending_model]{trending_fit}},
\code{\link[=fit_list]{trending_fit_list}} or \code{trending_fit_tbl} object.}

\item{new_data}{A \code{data.frame} containing data for which estimates are to be
derived. If missing, the model frame from the fit data will be used.}

\item{name}{Character vector of length one giving the name to use for the
calculated estimate.}

\item{alpha}{The alpha threshold to be used for prediction intervals,
defaulting to 0.05, i.e. 95\% prediction intervals are derived.}

\item{add_ci}{Should a confidence interval be added to the output.
Default TRUE.}

\item{ci_names}{Names to use for the resulting confidence intervals.}

\item{add_pi}{Should a prediction interval be added to the output.
Default TRUE.}

\item{pi_names}{Names to use for the resulting prediction intervals.}

\item{simulate_pi}{Should the prediction intervals for glm models be
simulated. If TRUE, default, \code{predict()} uses the \code{\link[ciTools:add_pi]{ciTools::add_pi()}}
function to generate the intervals.}

\item{sims}{The number of simulations to run when simulating prediction
intervals for a glm model.}

\item{uncertain}{Only used for glm models and when \code{simulate_pi = FALSE}.
Default TRUE.  If FALSE uncertainty in the fitted parameters is ignored
when generating the parametric prediction intervals.}

\item{as_tibble}{Should the output be converted to a tibble subclass.}

\item{...}{Not currently used.}
}
\value{
For \code{\link[=fit.trending_model]{trending_fit}} inputs, if
\code{as_tibble = FALSE}, a \code{trending_predict} object, which is a list subclass,
with entries:
\itemize{
\item result: the input data frame with additional estimates and, optionally,
confidence and or prediction intervals. \code{NULL} if the associated
\code{predict} method fails.
\item warnings: any warnings generated during prediction.
\item errors: any errors generated during prediction.
}

If \code{as_tibble = TRUE}, a \code{trending_predict_tbl} object which is a
\code{\link[tibble:tibble]{tibble}} subclass with one row and columns 'result',
'warnings' and 'errors' with contents as above.

For \code{\link[=fit_list]{trending_fit_list}} or \code{\link[=fit_list]{trending_fit_tbl}}
inputs, if \code{as_tibble = FALSE}, a \code{trending_fit_list} where each entry is a
\code{trending_fit} object. If \code{as_tibble = TRUE} a \code{trending_predict_tbl}
object with each row corresponding to the output of one model as above.
}
\description{
\code{predict()} adds estimated values and associated confidence and/or
prediction intervals for various fitted models.
}
\examples{
x = rnorm(100, mean = 0)
y = rpois(n = 100, lambda = exp(1.5 + 0.5*x))
dat <- data.frame(x = x, y = y)

poisson_model <- glm_model(y ~ x , family = "poisson")
negbin_model <- glm_nb_model(y ~ x)

fitted_poisson <- fit(poisson_model, dat)
fitted_negbin <- fit(negbin_model, dat)
fitted_list <- fit_list(list(poisson_model, negbin_model), dat)
fitted_list_named <- fit_list(list(p = poisson_model, n = negbin_model), dat)

predict(fitted_poisson)
predict(fitted_list)
predict(fitted_list, as_tibble = TRUE)
predict(fitted_list_named)
predict(fitted_list_named, as_tibble = TRUE)

}
